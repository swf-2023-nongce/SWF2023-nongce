/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MockVerifier, MockVerifierInterface } from "../MockVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pubInputs",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610417806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bd205a9014610030575b600080fd5b61004a600480360381019061004591906102d3565b610060565b6040516100579190610366565b60405180910390f35b600060016002845161007291906103b0565b14905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100dd82610094565b810181811067ffffffffffffffff821117156100fc576100fb6100a5565b5b80604052505050565b600061010f61007b565b905061011b82826100d4565b919050565b600067ffffffffffffffff82111561013b5761013a6100a5565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61016481610151565b811461016f57600080fd5b50565b6000813590506101818161015b565b92915050565b600061019a61019584610120565b610105565b905080838252602082019050602084028301858111156101bd576101bc61014c565b5b835b818110156101e657806101d28882610172565b8452602084019350506020810190506101bf565b5050509392505050565b600082601f8301126102055761020461008f565b5b8135610215848260208601610187565b91505092915050565b600080fd5b600067ffffffffffffffff82111561023e5761023d6100a5565b5b61024782610094565b9050602081019050919050565b82818337600083830152505050565b600061027661027184610223565b610105565b9050828152602081018484840111156102925761029161021e565b5b61029d848285610254565b509392505050565b600082601f8301126102ba576102b961008f565b5b81356102ca848260208601610263565b91505092915050565b600080604083850312156102ea576102e9610085565b5b600083013567ffffffffffffffff8111156103085761030761008a565b5b610314858286016101f0565b925050602083013567ffffffffffffffff8111156103355761033461008a565b5b610341858286016102a5565b9150509250929050565b60008115159050919050565b6103608161034b565b82525050565b600060208201905061037b6000830184610357565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103bb82610151565b91506103c683610151565b9250826103d6576103d5610381565b5b82820690509291505056fea2646970667358221220e748ec5a3da9bbaf58032be6fa68ad92e6e543aedd4f34ce973f5899cfd428b564736f6c63430008130033";

type MockVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockVerifier__factory extends ContractFactory {
  constructor(...args: MockVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockVerifier__factory {
    return super.connect(runner) as MockVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockVerifierInterface {
    return new Interface(_abi) as MockVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockVerifier {
    return new Contract(address, _abi, runner) as unknown as MockVerifier;
  }
}
